openapi: "3.0.2"
info:
  title: Team Project Volunteering API
  version: "1.0"
servers:
  - url: https://YOUR_STUDENT_ID.nuwebspace.co.uk/
paths:
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "Pa55wOrd!"
                phone:
                  type: string
                  example: "01234567890"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        409: { $ref: "#/components/responses/Conflict" }

  /user/login:
    post:
      summary: Log in as an existing user
      security:
        - basic: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        401: { $ref: "#/components/responses/Unauthorized" }
        403: { $ref: "#/components/responses/Forbidden" }

components:
  securitySchemes:
    basic:
      type: http
      scheme: basic

  responses:
    Conflict:
      description: The request conflicts with the current state of the server
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Unauthorized:
      description: The resource requires authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Forbidden:
      description: The given credentials are not allowed to access the resource
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Something went wrong."

    Token:
      type: object
      properties:
        token:
          type: string
          description: Base64 encoded JWT token
          pattern: ^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+$
