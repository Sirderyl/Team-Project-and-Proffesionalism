<?php

namespace App;

/**
 * Interface for a connection to a database.
 * Implementations are expected to:
 *  - Throw exceptions on error
 *  - Be safe from SQL injection
 * Implementations are not expected to:
 *  - Be thread-safe
 * @author Kieran
 */
interface ConnectionInterface
{
    /**
     * Execute a query and return the result
     * @param array<string, string|int|float|bool|null> $params
     */
    // @phpstan-ignore-next-line - Return type depends on the query. Individual methods should specify the return type
    public function query(string $query, array $params = []): array;

    /**
     * Run a statement that modifies the database and return the number of affected rows
     * @param array<string, string|int|float|bool|null> $params
     */
    public function execute(string $query, array $params = []): int;

    /**
     * Get the last ID generated by an INSERT statement
     * Should only be called immediately after INSERTing a row
     * Format and value are implementation-specific and should therefore not be relied upon
     *
     * @throws \LogicException If there is no last ID
     */
    public function lastInsertId(): string;
}
